<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans          
    http://www.springframework.org/schema/beans/spring-beans.xsd          
    http://code.alibabatech.com/schema/dubbo          
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd">



     <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->  
    <dubbo:application name="hjy_consumer" />
  
    <!-- 使用zookeeper注册中心暴露服务地址 -->  
    <!-- <dubbo:registry address="multicast://224.5.6.7:1234" /> -->  
    <!--<dubbo:registry id="zkRegisty" address="zookeeper://127.0.0.1:2181" />-->

    <dubbo:registry id="redisRegister" address="customerRedis://127.0.0.1:6379?password=redis"  />


    <!-- 生成远程服务代理，可以像使用本地bean一样使用demoService -->  
    <dubbo:reference registry="redisRegister"   protocol="dubbo"  id="dubboTestService"
        interface="com.java.core.rpc.dubbo.service.IDubboTestService" />


    <!-- 生成远程服务代理，可以像使用本地bean一样使用demoService -->
    <dubbo:reference registry="redisRegister"   protocol="dubbo" id="dubboInfoTestService"
        interface="com.java.core.rpc.dubbo.service.IDubboInfoTestService"  />



    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol id="dubbo"  name="dubbo" port="20880" />
    <dubbo:protocol    name="thrift" port="30880" />





</beans>